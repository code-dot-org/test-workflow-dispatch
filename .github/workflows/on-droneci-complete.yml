name: on-droneci-complete

on:
  workflow_dispatch:
    inputs:
      github_sha:
        description: "equivalent to github.sha in an ordinary workflow"
        required: true
      success:
        description: "did drone tests pass or fail?"
        required: true
        type: boolean

jobs:
  # This one should pass
  cms-followup:
    runs-on: ubuntu-24.04
    # uses: ./.github/workflows/cms-followup.yml
    steps:
      - run: |
          echo "Triggered by Drone commit: ${{ inputs.github_sha }} on branch ${{ github.ref }}"
          echo "This step should succeed"
          true

# Need to do this manually or the result won't be visible within the PR
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              context: 'CMS Followup',
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.github_sha }}',
              state: '${{ job.status == 'success' && "success" || "failure" }}',
            })

  # This one should fail
  k8s-followup:
    runs-on: ubuntu-24.04
    # uses: ./.github/workflows/k8s-followup.yml
    steps:
      - run: |
          echo "Triggered by Drone commit: ${{ inputs.github_sha }} on branch ${{ github.ref }}"
          echo "This step should fail"
          false

      # Need to do this manually or the result won't be visible within the PR
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              context: 'K8S Followup',
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ inputs.github_sha }}',
              state: '${{ job.status == 'success' && "success" || "failure" }}',
            })
